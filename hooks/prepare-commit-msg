#!/usr/bin/env bash

. "$(dirname "$0")/_/husky.sh"
RED='\033[0;31m'

updateCommitMessage(){
  echo "${BLUE}INFO - Prepending issue number to commit message.${NOCOLOR}"
  if [ -n "$BRANCH_NAME" ]; then
  sed -i.bak -e "1s/^/$EXTRACTED_ISSUE_ID: /" "$1" # Prepend trimmed branch ID to the commit message
  fi
}

askUserToContinue(){
  exec < /dev/tty
  read -p "$(echo "${BLUE}"INFO - Commit anyway? [y/n]"${NOCOLOR}")" -n 1 -r
  echo
  [[ $REPLY =~ ^[Yy]$ ]] && exit 0 || exit 1
}

printIssueURL(){
  echo "${BLUE}INFO - View on Pivotal Tracker: https://www.pivotaltracker.com/story/show/$EXTRACTED_ISSUE_ID${NOCOLOR}"
}

doesInputMatchIssueFormat(){
  [[ "$1" =~ $2 ]]
}

handleInputMismatch(){
  echo "${RED}ERROR - Could not detect issue number from filtered input of '$1'${NOCOLOR}"
  echo "${RED}ERROR - Branch name did not match regular expression $ISSUE_ID_FORMAT${NOCOLOR}"
  askUserToContinue "$@"
}

GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NOCOLOR='\033[0m'

ISSUE_ID_FORMAT="^([0-9]{9})$" # Pivotal Tracker Issue IDs are 9-digits

echo "${GREEN}-----------------PREPARE-COMMIT-MSG-----------------${NOCOLOR}"
if git symbolic-ref --short HEAD 1>/dev/null 2>&1; then
  BRANCH_NAME="$(git symbolic-ref --short HEAD)"
else
  echo "${BLUE}INFO - Could not detect branch name, a rebase is probably in-progress${NOCOLOR}"
  exit 0
fi

EXTRACTED_ISSUE_ID=$(echo "$BRANCH_NAME" | cut -d'-' -f1) # Get the first part of the branch name, delimited by '-'

CURRENT_COMMIT_MESSAGE=$(cut -sd':' -f1 < "$1")

if ! doesInputMatchIssueFormat "$EXTRACTED_ISSUE_ID" "$ISSUE_ID_FORMAT"; then
  handleInputMismatch "$EXTRACTED_ISSUE_ID"
fi

if doesInputMatchIssueFormat "$CURRENT_COMMIT_MESSAGE" "$ISSUE_ID_FORMAT"; then
  echo "${YELLOW}WARN - Issue number already present in commit message. Detected '$CURRENT_COMMIT_MESSAGE'.${NOCOLOR}"
  echo "${BLUE}INFO - Skipping auto-prepend.${NOCOLOR}"
  printIssueURL "$@"
  exit 0
elif [ -z "$CURRENT_COMMIT_MESSAGE" ]; then
  updateCommitMessage "$@"
  printIssueURL "$@"
else
  handleInputMismatch "$CURRENT_COMMIT_MESSAGE"
fi
